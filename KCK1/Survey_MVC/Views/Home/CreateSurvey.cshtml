@model Survey_MVC.ViewModels.Surveys.CreateSurveyVM
@{
    ViewBag.Title = "CreateSurvey";
}

@{ var iterator = 1; char sign = 'a';}
<h2>Create new survey</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "Error occured while creating new survey", new { @class = "text-danger" })
    <table style="float:left">
        <tr>
            <td>
                @Html.LabelFor(m => m.title)
                @Html.EditorFor(m => m.title, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(m => m.title, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.description)
                @Html.EditorFor(m => m.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.description, "", new { @class = "text-danger" })


            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.isAnonymous)
                @Html.CheckBoxFor(m => m.isAnonymous, new { htmlAttributes = new { @class = "form-control" } })
            </td>
        </tr>
        <tr>
            <td>
                @if (Model.questions.Count > 0)
                {
                    <div>
                        <center><button value="Confirm" name="button" type="submit" class="btn btn-search">Create survey</button></center>
                    </div>
                }
            </td>
        </tr>
    </table>

    <table style="float:left">
        <tr>
            <td>
                @Html.LabelFor(m => m.newQuestion.questionValue)
                @Html.EditorFor(m => m.newQuestion.questionValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.newQuestion.questionValue, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.newQuestion.isSingleChoice)
                @Html.CheckBoxFor(m => m.newQuestion.isSingleChoice, new { htmlAttributes = new { @class = "form-control" } })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.newQuestion.canAddOwnAnswers)
                @Html.CheckBoxFor(m => m.newQuestion.canAddOwnAnswers, new { htmlAttributes = new { @class = "form-control" } })
            </td>
        </tr>
        <tr>
            <td>
                <center><button value="AddQuestion" name="button" type="submit" class="btn btn-search">Add Question</button></center>
            </td>

        </tr>
    </table>

    <table>
        @if (Model.questions.Count > 0)
        {
            for (int i = 0; i < Model.questions.Count; i++)
            {
                @Html.HiddenFor(m => m.questions[i].canAddOwnAnswers)
                @Html.HiddenFor(m => m.questions[i].isSingleChoice)
                @Html.HiddenFor(m => m.questions[i].questionValueCopy)
                <tr>
                    <td>
                        @*@iterator.*@
                        <div>
                            @Html.EditorFor(m => m.questions[i].questionValue, new { htmlAttributes = new { @Value = @Model.questions[i].questionValue, @class = "form-control" } })
                        </div>
                        <div>@Html.ValidationMessageFor(m => m.questions[i].questionValue, "", new { @class = "text-danger" })</div>
                    <td>
                        <button class="btn-xs" value="DeleteQuestion @i" type="submit" name="button"><i class="glyphicon glyphicon-trash"></i>  Delete Question</button>
                    </td>

                </tr>
                for (int j = 0; j < @Model.questions[i].answers.Count; j++)
                {
                    @*@Html.HiddenFor(m => m.questions[i].answers[j])*@
                    @Html.HiddenFor(m => m.questions[i].answersCopy[j])
                    <tr>
                        <td>
                            @Html.EditorFor(m => m.questions[i].answers[j], new { htmlAttributes = new { @Value = @Model.questions[i].answers[j], @class = "form-control" } })
                            <div>@Html.ValidationMessageFor(m => m.questions[i].answers[j], "", new { @class = "text-danger" })</div>
                        </td>
                        <td><button class="btn-xs" value="DeleteAnswer @i @j" type="submit" name="button"><i class="fa fa-close"></i> Delete Answer</button></td>
                    </tr>
                    { sign++; }
                }

                <tr>
                    <td>
                        @Html.EditorFor(m => m.questions[i].newAnswer, new { htmlAttributes = new { @Value = "", placeholder = "New answer", @class = "form-control" } })
                        <div>@Html.ValidationMessageFor(m => m.questions[i].newAnswer, "", new { @class = "text-danger" })</div>

                        <div>
                            <center><button value="@i" type="submit" name="button" class="btn btn-search"> Add answer </button></center>
                        </div>

                    </td>
                </tr>
                { iterator++; sign = 'a'; }
            }
        }
    </table>
}
