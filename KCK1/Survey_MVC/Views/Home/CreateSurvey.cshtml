@model Survey_MVC.ViewModels.Surveys.CreateSurveyVM
@{
    ViewBag.Title = "CreateSurvey";
}

@{ var iterator = 1; char sign = 'a';}
<h2>Create new survey</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "Error occured while creating new survey", new { @class = "text-danger" })
    <table style="float:left">
        <tr>
            <td>
                @Html.EditorFor(model => model, new { htmlAttributes = new { @class = "form-control" } })
            </td>
        </tr>
        <tr>
            <td>
                @if (Model.questions.Count > 0)
                {
                        <div>
                            <center><button value="Submit" name="button" type="submit" class="btn btn-search">Create Survey</button></center>
                        </div>
                 }
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    @Html.EditorFor(model => model.newQuestion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.newQuestion, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    <center><button value="AddQuestion" name="button" type="submit" class="btn btn-search">Add Question</button></center>
                </td>

            </tr>
        </table>

        <table>
            @if (Model.questions.Count > 0)
            {
                for (int i = 0; i < Model.questions.Count; i++)
                {
                    <tr>
                        <td>
                            <div>
                                @iterator. @Model.questions[i].questionValue
                            </div>
                        </td>
                    </tr>
                    for (int j = 0; j < @Model.questions[i].answers.Count; j++)
                    {
                        <tr>
                            <td>
                                @sign) @Model.questions[i].answers[j]
                            </td>
                        </tr>
                        { sign++; }
                    }
                    { iterator++; sign = 'a'; }
                }
            }
        </table>
    }
